// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// varInfInputC
Rcpp::List varInfInputC(Rcpp::List model_r, int print, int printMod, int stepType, int maxTotalIter, int maxEIter, int maxAlphaIter, int maxThetaIter, int maxLSIter, double elboTol, double alphaTol, double thetaTol, double aNaught, double tau, int bMax, double bNaught, double bMult, int vCutoff, SEXP holdConstSEXP);
RcppExport SEXP _mixedMem_varInfInputC(SEXP model_rSEXP, SEXP printSEXP, SEXP printModSEXP, SEXP stepTypeSEXP, SEXP maxTotalIterSEXP, SEXP maxEIterSEXP, SEXP maxAlphaIterSEXP, SEXP maxThetaIterSEXP, SEXP maxLSIterSEXP, SEXP elboTolSEXP, SEXP alphaTolSEXP, SEXP thetaTolSEXP, SEXP aNaughtSEXP, SEXP tauSEXP, SEXP bMaxSEXP, SEXP bNaughtSEXP, SEXP bMultSEXP, SEXP vCutoffSEXP, SEXP holdConstSEXPSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type model_r(model_rSEXP);
    Rcpp::traits::input_parameter< int >::type print(printSEXP);
    Rcpp::traits::input_parameter< int >::type printMod(printModSEXP);
    Rcpp::traits::input_parameter< int >::type stepType(stepTypeSEXP);
    Rcpp::traits::input_parameter< int >::type maxTotalIter(maxTotalIterSEXP);
    Rcpp::traits::input_parameter< int >::type maxEIter(maxEIterSEXP);
    Rcpp::traits::input_parameter< int >::type maxAlphaIter(maxAlphaIterSEXP);
    Rcpp::traits::input_parameter< int >::type maxThetaIter(maxThetaIterSEXP);
    Rcpp::traits::input_parameter< int >::type maxLSIter(maxLSIterSEXP);
    Rcpp::traits::input_parameter< double >::type elboTol(elboTolSEXP);
    Rcpp::traits::input_parameter< double >::type alphaTol(alphaTolSEXP);
    Rcpp::traits::input_parameter< double >::type thetaTol(thetaTolSEXP);
    Rcpp::traits::input_parameter< double >::type aNaught(aNaughtSEXP);
    Rcpp::traits::input_parameter< double >::type tau(tauSEXP);
    Rcpp::traits::input_parameter< int >::type bMax(bMaxSEXP);
    Rcpp::traits::input_parameter< double >::type bNaught(bNaughtSEXP);
    Rcpp::traits::input_parameter< double >::type bMult(bMultSEXP);
    Rcpp::traits::input_parameter< int >::type vCutoff(vCutoffSEXP);
    Rcpp::traits::input_parameter< SEXP >::type holdConstSEXP(holdConstSEXPSEXP);
    rcpp_result_gen = Rcpp::wrap(varInfInputC(model_r, print, printMod, stepType, maxTotalIter, maxEIter, maxAlphaIter, maxThetaIter, maxLSIter, elboTol, alphaTol, thetaTol, aNaught, tau, bMax, bNaught, bMult, vCutoff, holdConstSEXP));
    return rcpp_result_gen;
END_RCPP
}
// computeElboC
double computeElboC(Rcpp::List model_r);
RcppExport SEXP _mixedMem_computeElboC(SEXP model_rSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type model_r(model_rSEXP);
    rcpp_result_gen = Rcpp::wrap(computeElboC(model_r));
    return rcpp_result_gen;
END_RCPP
}
// varInfInputExtC
Rcpp::List varInfInputExtC(Rcpp::List model_r, int print, int printMod, int stepType, int maxTotalIter, int maxEIter, int maxAlphaIter, int maxThetaIter, int maxLSIter, double elboTol, double alphaTol, double thetaTol, double aNaught, double tau, int bMax, double bNaught, double bMult, int vCutoff, SEXP holdConstSEXP);
RcppExport SEXP _mixedMem_varInfInputExtC(SEXP model_rSEXP, SEXP printSEXP, SEXP printModSEXP, SEXP stepTypeSEXP, SEXP maxTotalIterSEXP, SEXP maxEIterSEXP, SEXP maxAlphaIterSEXP, SEXP maxThetaIterSEXP, SEXP maxLSIterSEXP, SEXP elboTolSEXP, SEXP alphaTolSEXP, SEXP thetaTolSEXP, SEXP aNaughtSEXP, SEXP tauSEXP, SEXP bMaxSEXP, SEXP bNaughtSEXP, SEXP bMultSEXP, SEXP vCutoffSEXP, SEXP holdConstSEXPSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type model_r(model_rSEXP);
    Rcpp::traits::input_parameter< int >::type print(printSEXP);
    Rcpp::traits::input_parameter< int >::type printMod(printModSEXP);
    Rcpp::traits::input_parameter< int >::type stepType(stepTypeSEXP);
    Rcpp::traits::input_parameter< int >::type maxTotalIter(maxTotalIterSEXP);
    Rcpp::traits::input_parameter< int >::type maxEIter(maxEIterSEXP);
    Rcpp::traits::input_parameter< int >::type maxAlphaIter(maxAlphaIterSEXP);
    Rcpp::traits::input_parameter< int >::type maxThetaIter(maxThetaIterSEXP);
    Rcpp::traits::input_parameter< int >::type maxLSIter(maxLSIterSEXP);
    Rcpp::traits::input_parameter< double >::type elboTol(elboTolSEXP);
    Rcpp::traits::input_parameter< double >::type alphaTol(alphaTolSEXP);
    Rcpp::traits::input_parameter< double >::type thetaTol(thetaTolSEXP);
    Rcpp::traits::input_parameter< double >::type aNaught(aNaughtSEXP);
    Rcpp::traits::input_parameter< double >::type tau(tauSEXP);
    Rcpp::traits::input_parameter< int >::type bMax(bMaxSEXP);
    Rcpp::traits::input_parameter< double >::type bNaught(bNaughtSEXP);
    Rcpp::traits::input_parameter< double >::type bMult(bMultSEXP);
    Rcpp::traits::input_parameter< int >::type vCutoff(vCutoffSEXP);
    Rcpp::traits::input_parameter< SEXP >::type holdConstSEXP(holdConstSEXPSEXP);
    rcpp_result_gen = Rcpp::wrap(varInfInputExtC(model_r, print, printMod, stepType, maxTotalIter, maxEIter, maxAlphaIter, maxThetaIter, maxLSIter, elboTol, alphaTol, thetaTol, aNaught, tau, bMax, bNaught, bMult, vCutoff, holdConstSEXP));
    return rcpp_result_gen;
END_RCPP
}
// computeElboExtC
double computeElboExtC(Rcpp::List model_r);
RcppExport SEXP _mixedMem_computeElboExtC(SEXP model_rSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::List >::type model_r(model_rSEXP);
    rcpp_result_gen = Rcpp::wrap(computeElboExtC(model_r));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_mixedMem_varInfInputC", (DL_FUNC) &_mixedMem_varInfInputC, 19},
    {"_mixedMem_computeElboC", (DL_FUNC) &_mixedMem_computeElboC, 1},
    {"_mixedMem_varInfInputExtC", (DL_FUNC) &_mixedMem_varInfInputExtC, 19},
    {"_mixedMem_computeElboExtC", (DL_FUNC) &_mixedMem_computeElboExtC, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_mixedMem(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
